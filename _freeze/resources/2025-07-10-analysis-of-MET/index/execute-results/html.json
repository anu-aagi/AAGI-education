{
  "hash": "f2be55316f5b661ab096c7903fdc58be",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analysis of a multi-environmental field trial\"\nauthor: \"Emi Tanaka\"\ndate: 2025/07/10\ninstitute: Australian National University\nexecute:\n  cache: true\n  echo: true\nformat: \n  anu-light-revealjs:\n    width: 1920\n    height: 1080\n    disable-layout: false\n    auto-stretch: false\n    html-math-method: katex\n    code-block-height: 1000px\n    css: [/assets/tachyons-addon.css]\n---\n\n## Multi-environment trials \n\n\n::: {.cell}\n\n:::\n\n\n\n- Multi-environment trials (METs) are field experiments conducted in multiple locations and/or seasons to evaluate the performance of different crop genotypes. \n- Trial location and season/year is used synonymously with \"environment\"\n\n::: {.columns}\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cropscan)\nplot_field(met2_pheno)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n- $G = 191$ genotypes tested across all $E = 5$ environments with $n = 288$ observations and $B = 2$ blocks per trial.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconcurrence_matrix(met2_pheno)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     \n      E02 E05 E07 E08 E10\n  E02 191 191 191 191 191\n  E05 191 191 191 191 191\n  E07 191 191 191 191 191\n  E08 191 191 191 191 191\n  E10 191 191 191 191 191\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n## Approach 1: Fit separate models to each environment\n\nFor $i = 1, ..., E = 5$, assuming observations are ordered by row then column,\n\n\n$$\\boldsymbol{y}_i = \\boldsymbol{1}_{n}{\\color{orange}\\mu_i} + \\mathbf{Z}_{g_i}\\boldsymbol{u}_{g_i} + \\mathbf{Z}_{b}\\boldsymbol{u}_{b_i} + \\boldsymbol{e}_i,$$\n<center>\n$\\boldsymbol{u}_{g_i} \\sim N(\\boldsymbol{0}, {\\color{orange}\\sigma_{g_i}^2}\\mathbf{I}_G)$, $\\boldsymbol{u}_{b_i} \\sim N(\\boldsymbol{0}, {\\color{orange}\\sigma_{b_i}^2}\\mathbf{I}_B)$ and $\\boldsymbol{e}_{i} \\sim N(\\boldsymbol{0}, {\\color{orange}\\sigma_{i}^2}\\mathbf{I}_{n})$\n</center>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(asreml)\nlibrary(broom.asreml)\nfit_singles <- list()\nfor(trial in c(\"E02\", \"E05\", \"E07\", \"E08\", \"E10\")) {\n  fit_singles[[trial]] <- asreml(yield ~ 1, \n                                 random =~ gen + block, \n                                 data = met2_pheno |> \n                                   filter(env == trial))\n}\n```\n:::\n\n\n## Approach 2: Fit a [DIAG]{style=\"color:orange\"} model\n\n::: f2\n\n$$\\boldsymbol{y} = \\begin{bmatrix}\\boldsymbol{y}_1\\\\\\boldsymbol{y}_2\\\\\\boldsymbol{y}_3\\\\\\boldsymbol{y}_4\\\\\\boldsymbol{y}_5\\end{bmatrix} = (\\mathbf{I}_E\\otimes\\boldsymbol{1}_{n})\\boldsymbol{\\mu} + \\mathbf{Z}_{ge}{\\color{orange}\\boldsymbol{u}_{ge}} + (\\mathbf{I}_E\\otimes\\mathbf{Z}_b)\\boldsymbol{u}_b + \\boldsymbol{e}$$\n\n\n$$\\boldsymbol{u}_{ge}\\sim N\\left(\\boldsymbol{0}, {\\color{orange}\\begin{bmatrix}\\sigma^2_{g_1}\\mathbf{I}_G & \\mathbf{0} & \\mathbf{0} & \\mathbf{0} & \\mathbf{0}\\\\\\mathbf{0} & \\sigma^2_{g_2}\\mathbf{I}_G & \\mathbf{0} & \\mathbf{0} & \\mathbf{0}\\\\\\mathbf{0} & \\mathbf{0} & \\sigma^2_{g_3}\\mathbf{I}_G & \\mathbf{0} & \\mathbf{0}\\\\\\mathbf{0} & \\mathbf{0} & \\mathbf{0} & \\sigma^2_{g_4}\\mathbf{I}_G & \\mathbf{0}\\\\\\mathbf{0} & \\mathbf{0} & \\mathbf{0} & \\mathbf{0} & \\sigma^2_{g_5}\\mathbf{I}_G\\end{bmatrix}}\\right), \\boldsymbol{u}_{b}\\sim N\\left(\\boldsymbol{0}, \\text{diag}(\\sigma^2_{b_1}, \\sigma^2_{b_2}, \\sigma^2_{b_3}, \\sigma^2_{b_4}, \\sigma^2_{b_5})\\otimes \\mathbf{I}_B\\right),$$\n$$\\boldsymbol{e}\\sim N\\left(\\boldsymbol{0}, \\text{diag}(\\sigma^2_{1}, \\sigma^2_{2}, \\sigma^2_{3}, \\sigma^2_{4}, \\sigma^2_{5})\\otimes \\mathbf{I}_n\\right)$$\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_diag <- asreml(yield ~ env, \n                   random =~ diag(env):gen + diag(env):block, \n                   residual =~ dsum(~units|env),\n                   data = met2_pheno)\n```\n:::\n\n\n\n\n## Single site analysis vs MET analysis {.scrollable}\n\nWhat do you notice from below?\n\n::: {.columns .f3}\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(fit_diag, \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 5\n   term                 estimate std.error statistic constraint\n   <chr>                   <dbl>     <dbl>     <dbl> <chr>     \n 1 env:block!env_E02 0.0276        0.0415      0.666 P         \n 2 env:block!env_E05 0.0257        0.0372      0.691 P         \n 3 env:block!env_E07 0.000000264  NA          NA     B         \n 4 env:block!env_E08 0.00691       0.0101      0.685 P         \n 5 env:block!env_E10 0.00127       0.00207     0.611 P         \n 6 env:gen!env_E02   0.0648        0.0303      2.14  P         \n 7 env:gen!env_E05   0.0654        0.0140      4.66  P         \n 8 env:gen!env_E07   0.151         0.0228      6.64  P         \n 9 env:gen!env_E08   0.0249        0.00514     4.85  P         \n10 env:gen!env_E10   0.0271        0.00495     5.47  P         \n11 env_E02!R         0.231         0.0317      7.28  P         \n12 env_E05!R         0.0747        0.0105      7.09  P         \n13 env_E07!R         0.0781        0.0112      7.01  P         \n14 env_E08!R         0.0277        0.00385     7.19  P         \n15 env_E10!R         0.0232        0.00325     7.12  P         \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(fit_singles[[\"E02\"]], \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic constraint\n  <chr>      <dbl>     <dbl>     <dbl> <chr>     \n1 block     0.0276    0.0415     0.665 P         \n2 gen       0.0648    0.0303     2.14  P         \n3 units!R   0.231     0.0317     7.28  P         \n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(fit_singles[[\"E05\"]], \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic constraint\n  <chr>      <dbl>     <dbl>     <dbl> <chr>     \n1 block     0.0257    0.0372     0.692 P         \n2 gen       0.0654    0.0140     4.66  P         \n3 units!R   0.0747    0.0105     7.09  P         \n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(fit_singles[[\"E07\"]], \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term         estimate std.error statistic constraint\n  <chr>           <dbl>     <dbl>     <dbl> <chr>     \n1 block   0.00000000791   NA          NA    B         \n2 gen     0.151            0.0228      6.64 P         \n3 units!R 0.0782           0.0112      7.01 P         \n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(fit_singles[[\"E08\"]], \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic constraint\n  <chr>      <dbl>     <dbl>     <dbl> <chr>     \n1 block    0.00692   0.0101      0.684 P         \n2 gen      0.0249    0.00514     4.85  P         \n3 units!R  0.0277    0.00385     7.18  P         \n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(fit_singles[[\"E10\"]], \"varcomp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic constraint\n  <chr>      <dbl>     <dbl>     <dbl> <chr>     \n1 block    0.00127   0.00200     0.633 P         \n2 gen      0.0271    0.00495     5.47  P         \n3 units!R  0.0232    0.00326     7.11  P         \n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n## Approach 3: Fit a [CS]{style=\"color:orange\"} model\n\n::: f2\n\n$$\\boldsymbol{y}  = (\\mathbf{I}_E\\otimes\\boldsymbol{1}_{n})\\boldsymbol{\\mu} + \\mathbf{Z}_g{\\color{orange}\\boldsymbol{u}_g} + \\mathbf{Z}_{ge}{\\color{orange}\\boldsymbol{u}_{ge}} + (\\mathbf{I}_E\\otimes\\mathbf{Z}_b)\\boldsymbol{u}_b + \\boldsymbol{e}$$\n\nwhere $\\boldsymbol{u}_g \\sim N(\\boldsymbol{0}, {\\color{orange}\\sigma^2_g\\mathbf{I}_G})$, $\\boldsymbol{u}_{ge} \\sim N(\\boldsymbol{0}, {\\color{orange}\\sigma^2_{ge}\\mathbf{I}_{GE}})$ and other random effects distributed as Approach 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_cs <- asreml(yield ~ env, \n                 random =~ gen + env:gen + diag(env):block, \n                 residual =~ dsum(~units|env),\n                 data = met2_pheno)\n```\n:::\n\n\n\n\n$$\\boldsymbol{1}_E \\otimes \\boldsymbol{u}_g + \\boldsymbol{u}_{ge} \\sim N\\left(\\boldsymbol{0}, \\underbrace{{\\color{orange}\\begin{bmatrix}\\small\\sigma^2_g + \\sigma^2_{ge} & \\small\\sigma^2_g & \\small\\sigma^2_g & \\small\\sigma^2_g & \\small\\sigma^2_g \\\\\\small\\sigma^2_g &\\small\\sigma^2_g + \\sigma^2_{ge} &\\small\\sigma^2_g & \\sigma^2_g &  \\small\\sigma^2_g\\\\\\sigma^2_g & \\small\\sigma^2_g &\\small\\sigma^2_g + \\sigma^2_{ge}  & \\small\\sigma^2_g &  \\small\\sigma^2_g\\\\\\small\\sigma^2_g &\\small \\sigma^2_g &\\small\\sigma^2_g & \\small\\sigma^2_g + \\sigma^2_{ge} &  \\small \\sigma^2_g\\\\\\small\\sigma^2_g &\\small\\sigma^2_g  & \\small\\sigma^2_g &\\small \\sigma^2_g &  \\small\\sigma^2_g+ \\sigma^2_{ge}\\end{bmatrix}}}_{{\\color{orange}\\text{compound symmetry}}}\\otimes \\mathbf{I}_G \\right)$$\n\n- Note: in this forumlation $\\sigma^2_g > 0$ so covariance/correlation between same genotype across environment is always positive.\n\n:::\n\n\n## Yield distribution across environment\n\n\n::: {.columns}\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-11-1.png){width=1920}\n:::\n:::\n\n\n## Approach 4: Fit an [US]{style=\"color:orange\"} model\n\n::: f2\n\n$$\\boldsymbol{y} = (\\mathbf{I}_E\\otimes\\boldsymbol{1}_{n})\\boldsymbol{\\mu} + \\mathbf{Z}_{ge}{\\color{orange}\\boldsymbol{u}_{ge}} + (\\mathbf{I}_E\\otimes\\mathbf{Z}_b)\\boldsymbol{u}_b + \\boldsymbol{e}$$\n\n\n$$\\boldsymbol{u}_{ge}\\sim N\\left(\\boldsymbol{0}, \\underbrace{{\\color{orange}\\begin{bmatrix}\\small\\sigma^2_{g_1} & \\small\\sigma_{g_{12}} & \\small\\sigma_{g_{13}} & \\small\\sigma_{g_{14}} & \\small\\sigma_{g_{15}}\\\\\\small\\sigma_{g_{12}} & \\small\\sigma_{g_{2}}^2 & \\small\\sigma_{g_{23}} & \\small\\sigma_{g_{24}}  & \\small\\sigma_{g_{25}}\\\\  \\small\\sigma_{g_{13}}  & \\small\\sigma_{g_{23}} & \\small\\sigma_{g_{3}}^2  & \\small\\sigma_{g_{34}} & \\small\\sigma_{g_{35}}\\\\  \\small\\sigma_{g_{14}}  & \\small\\sigma_{g_{24}} & \\small\\sigma_{g_{34}}  & \\small\\sigma_{g_{4}}^2 & \\small\\sigma_{g_{45}}\\\\  \\small\\sigma_{g_{15}}  & \\small\\sigma_{g_{25}} & \\small\\sigma_{g_{35}}  & \\small\\sigma_{g_{45}} & \\small\\sigma_{g_{5}}^2 \\end{bmatrix}}}_{\\color{orange}\\text{unstructured}} \\otimes \\mathbf{I}_G\\right)$$\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_us <- asreml(yield ~ env, \n                 random =~ us(env):gen + diag(env):block, \n                 residual =~ dsum(~units|env),\n                 data = met2_pheno)\n```\n:::\n\n\n- Flexible model that \"borrows strength\" across environments for more accurate prediction of $\\boldsymbol{u}_{ge}$.\n\n\n## Number of parameters to estimate in an US model \n\n::: {.columns}\n::: {.column width=\"50%\"}\n\n| # Environment | # Parameters|\n|:---:|:----:|\n| 2 | 3 |\n| 3 | 6 |\n| 5 | 15 |\n| 10 | 55 |\n| 25 | 325 |\n| 50 | 1275 |\n| 100 | 5050 |\n| $E$ | $E(E + 1)/2$ |\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n$$\\mathbf{G}_{e} = \\begin{bmatrix}\\small\\sigma^2_{g_1} & \\small\\sigma_{g_{12}} & \\small\\sigma_{g_{13}} & \\small\\sigma_{g_{14}} & \\small\\sigma_{g_{15}}\\\\\\small\\color{grey}\\sigma_{g_{12}} & \\small\\sigma_{g_{2}}^2 & \\small\\sigma_{g_{23}} & \\small\\sigma_{g_{24}}  & \\small\\sigma_{g_{25}}\\\\  \\color{grey}\\small\\sigma_{g_{13}}  & \\color{grey}\\small\\sigma_{g_{23}} & \\small\\sigma_{g_{3}}^2  & \\small\\sigma_{g_{34}} & \\sigma_{g_{35}}\\\\  \\color{grey}\\small\\sigma_{g_{14}}  & \\color{grey}\\small\\sigma_{g_{24}} & \\color{grey}\\small\\sigma_{g_{34}}  & \\small\\sigma_{g_{4}}^2 & \\small\\sigma_{g_{45}}\\\\  \\color{grey}\\small\\sigma_{g_{15}}  & \\color{grey}\\small\\sigma_{g_{25}} & \\color{grey}\\small\\sigma_{g_{35}}  & \\color{grey}\\small\\sigma_{g_{45}} & \\small\\sigma_{g_{5}}^2 \\end{bmatrix}$$\n\n\n- The number of parameters to be estimated grows _quadratically_ with the number of environments so it quickly becomes too many parameters to estimate.\n\n:::\n:::\n\n\n## Approach 5: Fit a [FA]{style=\"color:orange;\"} model\n\nFor some order $K$, estimate the unstructured covariance with the factor analytic form:\n\n$$\\mathbf{G}_e \\approx \\mathbf{\\Lambda}\\mathbf{\\Lambda}^\\top + \\mathbf{\\Psi}$$\n\nwhere \n\n$$\\mathbf{\\Lambda} = \\underbrace{\\begin{bmatrix}\\lambda_{11} & 0 & \\cdots & 0\\\\\\lambda_{21} & \\lambda_{22} & \\ddots &0\\\\\\lambda_{31} & \\lambda_{32} & \\cdots &0\\\\\\lambda_{41} & \\lambda_{42} & \\cdots &0\\\\\\lambda_{51} & \\lambda_{52} & \\cdots &\\lambda_{5K}\\end{bmatrix}}_{\\text{loading matrix (with corner constraints)}}\\quad\\text{and}\\quad \\mathbf{\\Psi} = \\underbrace{\\begin{bmatrix}\\psi_1 & 0 & 0 & 0 & 0\\\\0 & \\psi_2 & 0 & 0& 0\\\\0& 0 & \\psi_3 & 0 & 0\\\\0 & 0 &0 & \\psi_4 & 0\\\\0 & 0& 0&0& \\psi_5\\end{bmatrix}}_{\\text{specific variances}}.$$\n\n\n\n## Number of parameters to estimate in a FA model \n\n\n::: {.columns}\n::: {.column width=\"70%\"}\n\n| # Env | US | FA1 | FA2 | FA3 | FA4 | \n|:---:|:----:|:----:|:----:|:----:|:----:|\n| 2 | 3 | [4]{style=\"color:grey\"} | [5]{style=\"color:grey\"}  |\n| 3 | 6 | 6 | [8]{style=\"color:grey\"}  | [9]{style=\"color:grey\"} \n| 5 | 15 | 10 | 14 |  [17]{style=\"color:grey\"}  | [19]{style=\"color:grey\"} \n| 10 | 55 | 20 | 29 | 37 | 44 |\n| 25 | 325 | 50 | 74 | 97 | 119 |\n| 50 | 1275 | 100 | 149 | 197 | 244 |\n| 100 | 5050 | 200 | 299 | 397 | 494 |\n\n<br>\n\n- FA model of order $K$ has $(K+1)E - K(K - 1)/2$ parameters to estimate.\n\n:::\n\n::: {.column width=\"30%\"}\n\n\n\n- The number of variance parameters to estimate for FA model grows _linearly_ with the number of environments.\n- The FA model can be thought of as low-order approximation of the US model.\n\n:::\n:::\n\n\n## Latent variable model \n\n- FA model is a special case of latent variable model when the responses are conditionally normally distributed\n\n$$\\boldsymbol{u}_{ge} = (\\mathbf{\\Lambda} \\otimes \\mathbf{I}_G)\n\\boldsymbol{f} + \\boldsymbol{\\delta}$$ assuming $$\\boldsymbol{f} \\sim N(\\boldsymbol{0}, \\mathbf{I}_{GK}) \\quad\\text{and}\\quad\\boldsymbol{\\delta}\\sim N(\\boldsymbol{0}, \\mathbf{\\Psi}\\otimes \\mathbf{I}_G).$$\n\n- Under above assumption:\n\n$$\\boldsymbol{u}_{ge} \\sim N(\\boldsymbol{0}, (\\mathbf{\\Lambda}\\mathbf{\\Lambda}^\\top + \\mathbf{\\Psi})\\otimes \\mathbf{I}_G).$$\n\n## Interpreting the latent variable model \n\n$$\\boldsymbol{u}_{ge} = \\underbrace{(\\mathbf{\\Lambda} \\otimes \\mathbf{I}_G)\n\\boldsymbol{f}}_{\\text{G}\\times\\text{E Regression}} + \\underbrace{\\boldsymbol{\\delta}}_{\\text{Residual G}\\times\\text{E}}$$\n\n- Notice that this is like a linear regression model except the covariates ($\\mathbf{\\Lambda}$) are estimated from the data.\n- The $\\mathbf{\\Lambda}$ represent some shared latent environment covariate.\n- $\\boldsymbol{f}$, referred to as **common factor**, represent how the genotype responds to that covariate.\n- $\\boldsymbol{\\delta}$, referred to as **specific factor**, represent an effect specific to that environment.\n\n\n## Fitting FA models \n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_fa2 <- asreml(yield ~ env, \n                  random =~ fa(env, 2):gen + diag(env):block, \n                  residual =~ dsum(~units|env),\n                  data = met2_pheno)\n```\n:::\n\n\nOr equivalently:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_rr2 <- asreml(yield ~ env, \n                  random =~ rr(env, 2):gen + diag(env):gen + diag(env):block, \n                  residual =~ dsum(~units|env),\n                  data = met2_pheno)\n```\n:::\n\n\n\n\n## Key takeaways {background-color=\"#F5EDDE\"}\n\n- When you have a MET data, think of the covariance structure in the model.\n- DIAG models can be equivalent to fitting separate models to each environment. \n- CS models can be too restrictive to realistically model the data.\n- US models are flexible and borrow strength across environments but the number of parameters to estimate can become prohitively large.\n- FA models are low-order approximation to US models. \n- FA models can also have possible interpretations useful for breeding. \n\n**Reference**\n\nSmith et al (2015) Factor analytic mixed models for the provision of grower information from national crop variety testing programs. Theor Appl Genet.\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}